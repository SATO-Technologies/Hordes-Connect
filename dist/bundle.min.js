(()=>{"use strict";const t=()=>navigator.userAgent.match("iPad")||navigator.userAgent.match("iPhone")||navigator.userAgent.match("iPod")||navigator.userAgent.match("Android"),e="https://hordesconnect.bysato.com",s=new class{constructor(){this.app="",this.size={width:t()?window.innerWidth:350,height:t()?window.innerHeight:820,top:t()?0:window.innerHeight/2-410,left:t()?0:window.innerWidth/2-175}}initialize({app:t="",size:e}){this.app=t;const{top:s,left:i,width:n,height:a}=e||{};isNaN(s)||(this.size.top=+s),isNaN(i)||(this.size.left=+i),isNaN(n)||(this.size.width=+n),isNaN(a)||(this.size.height=+a)}async createRequest(t){try{let e=await fetch("https://api.bysato.com/hordesconnect/request.php",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}});return e=await e.json(),e&&e.requestId?e.requestId:null}catch{return null}}open(t,s){return window.open(`${e}?type=${t}&msg=${s}`,"_blank",`toolbar=no,scrollbars=no,resizable=no,top=${this.size.top},left=${this.size.left},width=${this.size.width},height=${this.size.height}}`)}update(t,s,i,n,a){t.location.href=`${e}/${s}?type=${i}&msg=${n}`,window.addEventListener("message",(t=>{(t.originalEvent?.origin||t.origin).includes(e)&&a(JSON.parse(t.data))}))}getAddress({message:t="Address"}={}){let e=this.open("address",t);return new Promise((async(s,i)=>{try{let n=await this.createRequest({app:this.app,type:"address",message:t});n?this.update(e,n,"address",t,(t=>{t&&"address"==t.type?s(t.payload):i({error:"unable to get address"})})):i({error:"unable to create request"})}catch(t){i({error:"unable to get address"})}}))}signTransaction({message:t="Sign Transaction",base64Psbt:e=null,broadcast:s=!1}){let i=this.open("sign_transaction",t);return new Promise((async(n,a)=>{try{let r=await this.createRequest({app:this.app,type:"sign_transaction",message:t,base64Psbt:e,broadcast:s});r?this.update(i,r,"sign_transaction",t,(t=>{t&&"sign_transaction"==t.type?n(t.payload):a({error:"unable to sign transaction"})})):a({error:"unable to create request"})}catch{a({error:"unable to sign transaction"})}}))}mint({message:t="Inscribe Inscription",address:e,commitmentPsbt:s,revealTxData:i,fee:n}){let a=this.open("mint_inscription",t);return new Promise((async(r,o)=>{try{let c=await this.createRequest({app:this.app,type:"mint_inscription",message:t,address:e,commitmentPsbt:s,revealTxData:i,fee:n});c?this.update(a,c,"mint_inscription",t,(t=>{t&&"mint_inscription"==t.type?r(t.payload):o({error:"unable to inscribe inscription"})})):o({error:"unable to create request"})}catch(t){o({error:"unable to inscribe inscription"})}}))}};window.HordesConnect=s})();